Commands:
git diff (compare two commits, printing each line that is present in one commit but not the other)
git clone (make a copy of an entire Git repository, including the history, onto your own computer)
git checkout (temporarily reset all files in a directory to their state at the time of a specific commit)
git log (show the commits made in this respository starting with the most recent)
git init (creates a respository)
git status (shows what files have changed since the last commit)
git add $FILE_NAME (adds files to the staging area so that when a commit is run these files are included)
git commit (commits files in the staging area to be tracked) (Message format: type: subject / body / footer)
git diff (no additional coments provides differents between working directory and staging area)
git diff --staged (difference between staging area and repository)
git reset --hard (discards any changes in either working directory or staging area) NOT REVERSIBLE!!!
git checkout master (returns to the head of the commit files)
git branch (shows current branches)
git branch $NAME (creates a new branch with $NAME)
git log --graph --oneline $BRANCH_NAME $BRANCH_NAME ... (shows a set of commits for the branches)
git checkout -b $NEW_BRANCH_NAME (creates a new branch name and checkouts the file)
git gc (Garbage collection,cleans out unreachable branches)
git merge $BRANCH2 ($BRANCH2 will be merged into the branch that is currently checked out)
git mrege --abort (restonres files to a known state for a failed merge)
git show commit_id (compares a commit to its parent)